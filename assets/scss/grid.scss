:root {
  --grid-columns: 12;
  --grid-gutter: 8;
  --grid-padding: 24;
}

@media (min-width: $tablet) {
  :root {
    --grid-gutter: 8;
  }
}

@media (min-width: $desktop) {
  :root {
    --grid-padding: 32;
  }
}

// --------------------------------------------------------------------------------------
// Grid                     .grid
// --------------------------------------------------------------------------------------
// Column span              .col-span-{n}
// Breakpoint span          .sm:col-span-{n}
// --------------------------------------------------------------------------------------
// Column start             .col-start-{n}
// Breakpoint start         .sm:col-start-{n}
// --------------------------------------------------------------------------------------

@mixin grid-settings {
  display: grid;
  grid-auto-flow: row;
  grid-auto-rows: max-content;
  width: 100%;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  grid-column-gap: calc(var(--grid-gutter) * 1px);
  padding: 0 calc(var(--grid-padding) * 1px);

  @media (min-width: $mobile) {
    grid-column-gap: calc(
      (var(--grid-gutter) / #{strip-unit($mobile)}) * 100vw
    );
    padding: calc((var(--grid-padding) / #{strip-unit($mobile)}) * 100vw);
  }

  @media (min-width: $tablet) {
    grid-column-gap: calc(
      (var(--grid-gutter) / #{strip-unit($tablet)}) * 100vw
    );
    padding: calc((var(--grid-padding) / #{strip-unit($tablet)}) * 100vw);
  }

  @media (min-width: $desktop) {
    grid-column-gap: calc(
      (var(--grid-gutter) / #{strip-unit($desktop)}) * 100vw
    );
    padding: calc((var(--grid-padding) / #{strip-unit($desktop)}) * 100vw);
  }

  // remove padding from nested grids
  > .grid {
    padding-left: 0;
    padding-right: 0;
  }
}

// --------------------------------------------------------------------------------------
// Grid
// --------------------------------------------------------------------------------------

.grid {
  position: relative;
  @include grid-settings;

  [class*='cols-'] {
    padding-right: var(--space-8);
  }
}

// --------------------------------------------------------------------------------------
// Default column classes
// --------------------------------------------------------------------------------------

$grid-columns: 12;

// create span classes
@for $index from 1 through $grid-columns {
  .cols-#{$index} {
    // grid-column-end: span #{$index};
    grid-column: span #{$index} / span #{$index};
  }
}

.cols-auto {
  grid-column-start: auto;
}

// create start classes
@for $index from 1 through $grid-columns {
  .cols-start-#{$index} {
    grid-column-start: #{$index};
  }
}

// --------------------------------------------------------------------------------------
// Breakpoint column classes
// --------------------------------------------------------------------------------------

// Create column classes for all breakpoints
@each $name, $size in $breakpoints {
  @media (min-width: $size) {
    // create span classes
    @for $index from 1 through $grid-columns {
      .#{$name}_cols-#{$index} {
        // grid-column-end: span #{$index};
        grid-column: span #{$index} / span #{$index};
      }
    }

    .#{$name}_cols-auto {
      grid-column-start: auto;
    }

    // create start classes
    @for $index from 1 through $grid-columns {
      .#{$name}_cols-start-#{$index} {
        grid-column-start: #{$index};
      }
    }
  }
}
